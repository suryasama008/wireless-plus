{"ast":null,"code":"export const START_AUTH_ACTION = \"START_AUTH_ACTION\";\nexport const LOGIN_SUCCESS = \"LOGIN_SUCCESS\";\nexport const SIGNOUT_SUCCESS = \"SIGNOUT_SUCCESS\";\nexport const SIGNUP_SUCCESS = \"SIGNUP_SUCCESS\";\nexport const AUTH_ERROR = \"ERROR\";\nexport const signIn = credentials => {\n  return (dispatch, getState, _ref) => {\n    let {\n      getFirebase\n    } = _ref;\n    dispatch({\n      type: START_AUTH_ACTION\n    });\n    const firebase = getFirebase();\n    firebase.auth().signInWithEmailAndPassword(credentials.email, credentials.password).then(() => {\n      dispatch({\n        type: LOGIN_SUCCESS\n      });\n    }).catch(err => {\n      dispatch({\n        type: AUTH_ERROR,\n        payload: err.message\n      });\n    });\n  };\n};\nexport const signOut = () => {\n  return (dispatch, getState, _ref2) => {\n    let {\n      getFirebase\n    } = _ref2;\n    dispatch({\n      type: START_AUTH_ACTION\n    });\n    const firebase = getFirebase();\n    firebase.auth().signOut().then(() => {\n      dispatch({\n        type: SIGNOUT_SUCCESS\n      });\n    });\n  };\n};\nexport const signUp = newUser => {\n  return (dispatch, getState, _ref3) => {\n    let {\n      getFirebase,\n      getFirestore\n    } = _ref3;\n    dispatch({\n      type: START_AUTH_ACTION\n    });\n    const firebase = getFirebase();\n    const firestore = getFirestore();\n    firebase.auth().createUserWithEmailAndPassword(newUser.email, newUser.password).then(resp => {\n      return firestore.collection(\"users\").doc(resp.user.uid).set({\n        firstName: newUser.firstName,\n        lastName: newUser.lastName\n      });\n    }).then(() => {\n      dispatch({\n        type: SIGNUP_SUCCESS\n      });\n    }).catch(err => {\n      dispatch({\n        type: AUTH_ERROR,\n        payload: err.message\n      });\n    });\n  };\n};","map":{"version":3,"names":["START_AUTH_ACTION","LOGIN_SUCCESS","SIGNOUT_SUCCESS","SIGNUP_SUCCESS","AUTH_ERROR","signIn","credentials","dispatch","getState","getFirebase","type","firebase","auth","signInWithEmailAndPassword","email","password","then","catch","err","payload","message","signOut","signUp","newUser","getFirestore","firestore","createUserWithEmailAndPassword","resp","collection","doc","user","uid","set","firstName","lastName"],"sources":["/Users/suryasama/Documents/Wirelessplus-Backup/WirelessPlus/wireless-plus/src/actions/auth.js"],"sourcesContent":["export const START_AUTH_ACTION = \"START_AUTH_ACTION\";\nexport const LOGIN_SUCCESS = \"LOGIN_SUCCESS\";\nexport const SIGNOUT_SUCCESS = \"SIGNOUT_SUCCESS\";\nexport const SIGNUP_SUCCESS = \"SIGNUP_SUCCESS\";\nexport const AUTH_ERROR = \"ERROR\";\n\nexport const signIn = (credentials) => {\n  return (dispatch, getState, { getFirebase }) => {\n    dispatch({ type: START_AUTH_ACTION });\n    const firebase = getFirebase();\n    firebase\n      .auth()\n      .signInWithEmailAndPassword(credentials.email, credentials.password)\n      .then(() => {\n        dispatch({ type: LOGIN_SUCCESS });\n      })\n      .catch((err) => {\n        dispatch({ type: AUTH_ERROR, payload: err.message });\n      });\n  };\n};\n\nexport const signOut = () => {\n  return (dispatch, getState, { getFirebase }) => {\n    dispatch({ type: START_AUTH_ACTION });\n    const firebase = getFirebase();\n    firebase\n      .auth()\n      .signOut()\n      .then(() => {\n        dispatch({ type: SIGNOUT_SUCCESS });\n      });\n  };\n};\n\nexport const signUp = (newUser) => {\n  return (dispatch, getState, { getFirebase, getFirestore }) => {\n    dispatch({ type: START_AUTH_ACTION });\n    const firebase = getFirebase();\n    const firestore = getFirestore();\n\n    firebase\n      .auth()\n      .createUserWithEmailAndPassword(newUser.email, newUser.password)\n      .then((resp) => {\n        return firestore.collection(\"users\").doc(resp.user.uid).set({\n          firstName: newUser.firstName,\n          lastName: newUser.lastName,\n        });\n      })\n      .then(() => {\n        dispatch({ type: SIGNUP_SUCCESS });\n      })\n      .catch((err) => {\n        dispatch({ type: AUTH_ERROR, payload: err.message });\n      });\n  };\n};\n"],"mappings":"AAAA,OAAO,MAAMA,iBAAiB,GAAG,mBAA1B;AACP,OAAO,MAAMC,aAAa,GAAG,eAAtB;AACP,OAAO,MAAMC,eAAe,GAAG,iBAAxB;AACP,OAAO,MAAMC,cAAc,GAAG,gBAAvB;AACP,OAAO,MAAMC,UAAU,GAAG,OAAnB;AAEP,OAAO,MAAMC,MAAM,GAAIC,WAAD,IAAiB;EACrC,OAAO,CAACC,QAAD,EAAWC,QAAX,WAAyC;IAAA,IAApB;MAAEC;IAAF,CAAoB;IAC9CF,QAAQ,CAAC;MAAEG,IAAI,EAAEV;IAAR,CAAD,CAAR;IACA,MAAMW,QAAQ,GAAGF,WAAW,EAA5B;IACAE,QAAQ,CACLC,IADH,GAEGC,0BAFH,CAE8BP,WAAW,CAACQ,KAF1C,EAEiDR,WAAW,CAACS,QAF7D,EAGGC,IAHH,CAGQ,MAAM;MACVT,QAAQ,CAAC;QAAEG,IAAI,EAAET;MAAR,CAAD,CAAR;IACD,CALH,EAMGgB,KANH,CAMUC,GAAD,IAAS;MACdX,QAAQ,CAAC;QAAEG,IAAI,EAAEN,UAAR;QAAoBe,OAAO,EAAED,GAAG,CAACE;MAAjC,CAAD,CAAR;IACD,CARH;EASD,CAZD;AAaD,CAdM;AAgBP,OAAO,MAAMC,OAAO,GAAG,MAAM;EAC3B,OAAO,CAACd,QAAD,EAAWC,QAAX,YAAyC;IAAA,IAApB;MAAEC;IAAF,CAAoB;IAC9CF,QAAQ,CAAC;MAAEG,IAAI,EAAEV;IAAR,CAAD,CAAR;IACA,MAAMW,QAAQ,GAAGF,WAAW,EAA5B;IACAE,QAAQ,CACLC,IADH,GAEGS,OAFH,GAGGL,IAHH,CAGQ,MAAM;MACVT,QAAQ,CAAC;QAAEG,IAAI,EAAER;MAAR,CAAD,CAAR;IACD,CALH;EAMD,CATD;AAUD,CAXM;AAaP,OAAO,MAAMoB,MAAM,GAAIC,OAAD,IAAa;EACjC,OAAO,CAAChB,QAAD,EAAWC,QAAX,YAAuD;IAAA,IAAlC;MAAEC,WAAF;MAAee;IAAf,CAAkC;IAC5DjB,QAAQ,CAAC;MAAEG,IAAI,EAAEV;IAAR,CAAD,CAAR;IACA,MAAMW,QAAQ,GAAGF,WAAW,EAA5B;IACA,MAAMgB,SAAS,GAAGD,YAAY,EAA9B;IAEAb,QAAQ,CACLC,IADH,GAEGc,8BAFH,CAEkCH,OAAO,CAACT,KAF1C,EAEiDS,OAAO,CAACR,QAFzD,EAGGC,IAHH,CAGSW,IAAD,IAAU;MACd,OAAOF,SAAS,CAACG,UAAV,CAAqB,OAArB,EAA8BC,GAA9B,CAAkCF,IAAI,CAACG,IAAL,CAAUC,GAA5C,EAAiDC,GAAjD,CAAqD;QAC1DC,SAAS,EAAEV,OAAO,CAACU,SADuC;QAE1DC,QAAQ,EAAEX,OAAO,CAACW;MAFwC,CAArD,CAAP;IAID,CARH,EASGlB,IATH,CASQ,MAAM;MACVT,QAAQ,CAAC;QAAEG,IAAI,EAAEP;MAAR,CAAD,CAAR;IACD,CAXH,EAYGc,KAZH,CAYUC,GAAD,IAAS;MACdX,QAAQ,CAAC;QAAEG,IAAI,EAAEN,UAAR;QAAoBe,OAAO,EAAED,GAAG,CAACE;MAAjC,CAAD,CAAR;IACD,CAdH;EAeD,CApBD;AAqBD,CAtBM"},"metadata":{},"sourceType":"module"}