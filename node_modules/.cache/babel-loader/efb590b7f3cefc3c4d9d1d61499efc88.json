{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.useGuaranteedMemo = void 0;\n\nconst react_1 = require(\"react\");\n/** Like react's useMemo but with guarantee that the fn\n * won't be invoked again if deps hasn't change */\n\n\nfunction useGuaranteedMemo(fn, deps) {\n  const ref = (0, react_1.useRef)();\n\n  if (!ref.current || deps.length !== ref.current.prevDeps.length || ref.current.prevDeps.map((v, i) => v === deps[i]).indexOf(false) >= 0) {\n    ref.current = {\n      \"v\": fn(),\n      \"prevDeps\": [...deps]\n    };\n  }\n\n  return ref.current.v;\n}\n\nexports.useGuaranteedMemo = useGuaranteedMemo;","map":null,"metadata":{},"sourceType":"script"}